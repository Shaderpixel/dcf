{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/build/js/app/preBabel/common/dialog.js","assets/build/js/app/preBabel/common/notice.js","assets/build/js/app/preBabel/common/uuid-gen.js","example/js/src/main-body.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfDialog = factory();\n  }\n}(this, function() {\nfunction Dialog(dialogPolyfill) {\n  // select all modal and convert node list to array\n  const modalContainers = [].slice.call(document.querySelectorAll('.dcf-js-dialog'));\n\n  modalContainers.forEach((modalContainer) => {\n    const trigger = modalContainer.querySelector('.dcf-js-dialog-trigger');\n    const modalDialog = modalContainer.querySelector('dialog');\n    const closeButton = modalContainer.querySelector('.dcf-o-dialog__close');\n\n    // if global dialog property not present, register all dialog modal with polyfill\n    if (!window.HTMLDialogElement) {\n      dialogPolyfill.registerDialog(modalDialog);\n    }\n\n    // show dialog on trigger button click\n    trigger.addEventListener('click', () => {\n      modalDialog.showModal();\n      // translate doesn't seem to work on dialog\n      modalDialog.style.top = `calc(50% - ${modalDialog.scrollHeight / 2}px)`;\n    });\n\n    // close dialog on close button click\n    closeButton.addEventListener('click', () => {\n      modalDialog.close('closed');\n    });\n\n    // close dialog on Esc button press\n    modalDialog.addEventListener('cancel', () => {\n      modalDialog.close('cancelled');\n    });\n\n    // close dialog when clicking on dialog backdrop\n    // for this to work properly, child elements of dialog must span the entire region\n    // within the dialog box so that when clicking within the dialog, child elements\n    // are clicked on instead of the dialog box itself\n    modalContainer.addEventListener('click', (e) => {\n      if (e.target == modalDialog) {\n        modalDialog.close('cancelled');\n      }\n    });\n  });\n\n  return dialogPolyfill;\n}\n\nreturn Dialog;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['./uuid-gen'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('./uuid-gen'));\n  } else {\n    root.dcfWidgetNotice = factory(root.dcfHelperUuidv4);\n  }\n}(this, function(uuidv4) {\n// uuid-gen dependency defined in gruntfile UMD task and passed in as uuidv4\n//TODO change this to use Class instead\n\n\tlet Notice = {};\n\tlet notices = document.querySelectorAll('[data-widget=\"notice\"]');\n\tlet fixedBottomExists = document.querySelector('[id*=\"unl-widget-fixedBottom-\"]') ? true : false; // flag for checking if a fixedBottom notice has been previously added to the page set flag to true\n\n\tnotices = [].slice.call(notices);\n\n// standard classes based on what kind of notice, keep it to DCF classes for now\n\tconst noticeClasses = {\n\t\tnotify: ['dcf-notice', 'unl-notice-notify'],\n\t\tsuccess: ['dcf-notice', 'unl-notice-success'],\n\t\talert: ['dcf-notice', 'unl-notice--alert'],\n\t\tfatal: ['dcf-notice', 'unl-notice--fatal'],\n\t};\n\n\tconst noticeLocationClasses = {\n\t\tcurrent: ['uno'],\n\t\tnav: ['foo'],\n\t\tfixedBottom: ['bar', 'dcf-fixed', 'dcf-notice-fixedBottom', 'dcf-pin-bottom', 'dcf-pin-right', 'dcf-pin-left'],\n\t\tfixedBottomLeft: ['zoink'] // TODO add option that goes 50% width on desktop when fixedBottom\n\t};\n\n// default animations depending on associated locations\n// fixedBottom associated with slideUp animation. Everything else uses slideInScroll\n\tconst noticeAnimationClasses = {\n\t\tslideInScroll: ['baz'],\n\t\tslideUp: ['car'],\n\t};\n\n\tconst closeButtonClasses = ['dcf-absolute', 'dcf-pin-top', 'dcf-pin-right', 'dcf-mt-3', 'dcf-mr-3', 'dcf-btn', 'dcf-btn-tertiary', 'js-notice-toggle'];\n\n\n\t/**\n\t *\n\t * Functions\n\t */\n\n\t/**\n\t * @purpose - move element to be the first child of main\n\t * @param el - the element to be moved\n\t *\n\t */\n\tfunction prependMain(el) {\n\t\tconst main = document.querySelector('main');\n\t\tconst firstChild = main.firstElementChild;\n\t\tmain.insertBefore(el, firstChild);\n\t}\n\n\t/**\n\t * @purpose - permanently closes the notice element\n\t * @param notice - notice to be closed\n\t *\n\t */\n\tfunction closeNotice(notice) {\n\n\t\tfunction hideNotice(e) {\n\t\t\tif (e.propertyName !== \"max-height\") return;\n\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\tnotice.removeEventListener('transitionend', hideNotice);\n\t\t\tdocument.querySelector('main').focus(); // sending focus back to main\n\t\t}\n\n\t\tnotice.addEventListener('transitionend', hideNotice);\n\t\tnotice.classList.add('dcf-notice-fixedBottom--close');\n\n\t\tlocalStorage.setItem(notice.id, 'closed');\n\t}\n\n\t/**\n\t * @purpose - collapse message when collapse button is selected\n\t * @param el - notice to be closed\n\t * @param closeButton - the close button associated with this notice\n\t * @param title - title of notice\n\t * @param message - message of notice\n\t *\n\t */\n\tfunction collapseExpandMessage(el, closeButton, title, message) {\n\t\t// Find out if notice is expanded\n\t\tlet expanded = closeButton.getAttribute('aria-expanded') === \"true\" ? true : false;\n\n\t\tif (expanded) {\n\t\t\t// if expanded, collapse message\n\t\t\tcloseButton.innerText = \"Expand\";\n\t\t\ttitle.classList.add('dcf-notice-title-collapse');\n\t\t\tmessage.classList.add('dcf-notice-message-collapse');\n\t\t\tlocalStorage.setItem(el.id, 'collapsed');\n\t\t} else {\n\t\t\t// if collapse, expand message\n\t\t\tcloseButton.innerText = \"Collapse\";\n\t\t\tmessage.classList.remove('dcf-notice-message-collapse');\n\t\t\ttitle.classList.remove('dcf-notice-title-collapse');\n\t\t\tlocalStorage.setItem(el.id, 'expanded');\n\t\t}\n\n\t\t// Invert to get new state\n\t\texpanded = new Boolean(!expanded);\n\n\t\t//Apply new state to notice\n\t\tcloseButton.setAttribute('aria-expanded', expanded.toString());\n\t}\n\n\n\t/**\n\t * @purpose add a close button to the widget and the associated click events\n\t * @param el\n\t * @param isCollapsible\n\t *\n\t */\n\tfunction addCloseButton(el, isCollapsible) {\n\t\tconst closeButton = document.createElement('button');\n\t\tcloseButtonClasses.forEach(closeButtonclass => closeButton.classList.add(closeButtonclass));\n\n\t\tif (isCollapsible) {\n\t\t\t// if notice can be collapsed\n\t\t\tconst noticeTitle = el.querySelector('.js-notice-title');\n\t\t\tconst noticeMessage = el.querySelector('.js-notice-message');\n\t\t\tconst noticeMessageId = noticeMessage.id || uuidv4();\n\n\t\t\tcloseButton.innerText = 'collapse';\n\t\t\tcloseButton.setAttribute('aria-expanded', 'true');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnoticeTitle.classList.add('dcf-notice-title');\n\n\t\t\t!noticeMessage.id && (noticeMessage.id = noticeMessageId); //if no id is provided use the generated id\n\t\t\tcloseButton.setAttribute('aria-controls', noticeMessageId);\n\t\t\tnoticeMessage.classList.add('dcf-notice-message');\n\n\n\t\t\tcloseButton.addEventListener('click', () => {\n\t\t\t\tcollapseExpandMessage(el, closeButton, noticeTitle, noticeMessage);\n\t\t\t});\n\n\t\t} else {\n\t\t\t// else close the notice out completely\n\t\t\tcloseButton.innerText = 'close';\n\t\t\tcloseButton.addEventListener('click', () => {\n\t\t\t\tcloseNotice(el);\n\t\t\t});\n\t\t}\n\n\t\tel.insertBefore(closeButton, el.firstElementChild);\n\t}\n\n\n\t/**\n\t * Intersection Observer related code\n\t */\n\n// intersection observer - one time drawing variables and functions\n\tlet isDrawn = false;\n\tlet isMobile = false;\n\tlet mobileObserver, desktopObserver;\n\tconst mq = window.matchMedia(\"(min-width: 480px)\");\n\tconst mobileConfig = {\n\t\t/* on mobile given potential line breaks, we won't be able to view the entire notice in its\n\t\t entirety at one go so might want to show the notice when close to half of it is shown */\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.65\n\t};\n\tconst desktopConfig = {\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.8\n\t};\n\n\tfunction observerCallback(entries, observer) {\n\t\tentries.forEach(entry => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tif (entry.intersectionRatio > 0 && entry.intersectionRatio >= observer.thresholds[0]) {\n\t\t\t\t\tnoticeAnimationClasses.slideInScroll.forEach(noticeAnimationClass => entry.target.classList.add(noticeAnimationClass));\n\n\t\t\t\t\t// set isDrawn flag to true after actions have been taken\n\t\t\t\t\tisDrawn = true;\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction onWidthChange(mq) {\n\t\tif (isDrawn) return;\n\t\tif (mq.matches) {\n\t\t\t//desktop\n\t\t\tisMobile = false;\n\t\t\tcreateDesktopObserver();\n\n\t\t\tif (mobileObserver) {\n\t\t\t\tmobileObserver.disconnect();\n\t\t\t}\n\t\t} else {\n\t\t\t//mobile\n\t\t\tisMobile = true;\n\t\t\tcreateMobileObserver();\n\n\t\t\tif (desktopObserver) {\n\t\t\t\tdesktopObserver.disconnect();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createMobileObserver() {\n\t\tnotices.forEach(notice => {\n\t\t\tmobileObserver = new IntersectionObserver(observerCallback, mobileConfig);\n\t\t\tmobileObserver.observe(notice);\n\t\t});\n\t}\n\n\tfunction createDesktopObserver() {\n\t\tnotices.forEach(notice => {\n\t\t\tdesktopObserver = new IntersectionObserver(observerCallback, desktopConfig);\n\t\t\tdesktopObserver.observe(notice);\n\t\t});\n\t}\n\n\n\t/**\n\t * @purpose reusable notice creation and styling code\n\t * @param notice - the notice element\n\t */\n\tfunction createNotice(notice) {\n\t\tif (notice.initialized) return; // exit if the notice has been initialized\n\n\t\tconst noticeType = notice.dataset.noticeType;\n\t\tconst noticeLocation = notice.dataset.location;\n\t\tconst noticeAnimation = notice.dataset.animation === \"true\" ? true : false;\n\t\tconst noticeCollapsible = notice.dataset.collapsible === \"true\" ? true : false;\n\n\t\t// 1.check notice option type and add the needed classes\n\t\tif (noticeClasses[noticeType]) {\n\t\t\tnoticeClasses[noticeType].forEach(noticeClass => notice.classList.add(noticeClass))\n\t\t} else {\n\t\t\t// default to info notify styling\n\t\t\tnoticeClasses.notify.forEach(noticeClass => notice.classList.add(noticeClass))\n\t\t}\n\n\t\t// 2.check widget location whether its current, nav, or fixed-bottom and assign class names\n\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\tif (!fixedBottomExists) {\n\t\t\t\t// get provided id and append it with a prefix\n\t\t\t\tif (notice.id) {\n\t\t\t\t\tnotice.id = `unl-widget-fixedBottom--${notice.id}`;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t'An id attribute needs to be provided for the fixed to bottom notice to function properly with' +\n\t\t\t\t\t\t\t' localStorage');\n\t\t\t\t}\n\n\t\t\t\t// check to see if data-collapsible is false and exists in storage as closed, hide notice rightaway\n\t\t\t\tif (!noticeCollapsible && localStorage.getItem(notice.id) === 'closed') {\n\t\t\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// add assigned classes\n\t\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t\t}\n\n\t\t\t\taddCloseButton(notice, noticeCollapsible);\n\t\t\t\tprependMain(notice); // move fixed-bottom notice to the top of source\n\t\t\t\tfixedBottomExists = true;\n\t\t\t} else {\n\t\t\t\tconsole.error('Only one fixed to bottom notice may exist on a page');\n\t\t\t}\n\n\t\t} else {\n\t\t\t// location other than fixedBottom\n\n\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t} else {\n\t\t\t\t// set current option as the default notice styling\n\t\t\t\tnoticeLocationClasses.current.forEach(noticeLocationClass => notice.classList.add(noticeLocationClass));\n\t\t\t}\n\n\t\t\t// 2.1 if its nav, move the element to after the nav and before the page title\n\t\t\tif (noticeLocation === 'nav') {\n\t\t\t\tprependMain(notice);\n\t\t\t}\n\t\t}\n\n\t\t// 3. check animation type whether its slide-in-scroll?\n\t\t// if exist will have to implement intersection observer\n\t\t// Question for Michael if multiple widgets need intersection observer, how can we make it more modular?\n\t\tif (noticeAnimation) {\n\t\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\t\t// add noticeAnimationClasses.slideUp\n\t\t\t\tnoticeAnimationClasses.slideUp.forEach(noticeAnimationClass => notice.classList.add(noticeAnimationClass))\n\t\t\t} else {\n\t\t\t\t// implement intersection observer\n\t\t\t\t// add noticeAnimationClasses.slideInScroll\n\t\t\t\tif ('IntersectionObserver' in window) {\n\t\t\t\t\tnotice.classList.add('hide-animate');\n\t\t\t\t\tmq.addListener(() => onWidthChange(mq));\n\n\t\t\t\t\t//check browser width once on page load\n\t\t\t\t\tonWidthChange(mq);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnotice.initialized = true;\n\n\t\t// 4. check localStorage for fixed bottom and collapsible\n\t\tif (noticeCollapsible && localStorage.getItem(notice.id) === 'collapsed') {\n\t\t\tconst noticeTitle = notice.querySelector('.js-notice-title');\n\t\t\tconst noticeMessage = notice.querySelector('.js-notice-message');\n\t\t\tconst toggleButton = notice.querySelector('.js-notice-toggle');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcollapseExpandMessage(notice, toggleButton, noticeTitle, noticeMessage);\n\t\t}\n\t}\n\n\t/**\n\t *  widget.initialize is the default functionality that scans all the existing notice widgets in the dom\n\t *  and initialize them\n\t */\n\tNotice.initialize = () => {\n\t\tnotices.forEach(notice => {\n\t\t\t\t\tcreateNotice(notice);\n\t\t\t\t}\n\t\t)\n\t};\n\n\t/**\n\t * widget.create takes in arguments to dynamically create notices on the fly\n\t */\n\tNotice.create = (noticeTitle, noticeMessage, widgetOptions, insertionReference = 'main', insertionPoint) => {\n\t\tconst notice = document.createElement('div');\n\t\tconst noticeHeader = document.createElement('h2');\n\t\tconst noticeContent = document.createElement('p');\n\n\t\t// set up the notice element\n\t\tconst keys = Object.keys(widgetOptions);\n\t\tnotice.setAttribute('role', 'alert');\n\n\t\tkeys.forEach(key => {\n\t\t\tnotice.setAttribute(`data-${key}`, widgetOptions[key]);\n\t\t});\n\n\t\tif (typeof(noticeTitle) === 'string') noticeHeader.innerText = noticeTitle;\n\t\tif (typeof(noticeMessage) === 'string') noticeContent.innerText = noticeMessage;\n\t\tnotice.appendChild(noticeHeader);\n\t\tnotice.appendChild(noticeContent);\n\n\t\t// insert the notice\n\t\tif (insertionReference === 'main' && insertionPoint === undefined) {\n\t\t\t// assuming no insertionReference or insertionPoint provided\n\t\t\tprependMain(notice)\n\t\t} else {\n\t\t\t// if insertionReference provided without insertigonPoint provided, default will be afterbegin\n\t\t\tif (insertionPoint === undefined) insertionPoint = 'afterbegin';\n\t\t\tconst targetElement = document.querySelector(insertionReference);\n\t\t\ttargetElement.insertAdjacentElement(insertionPoint, notice);\n\t\t}\n\n\t\t// call createNotice\n\t\tcreateNotice(notice);\n\t};\n\nreturn Notice;\n}));\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.dcfHelperUuidv4 = factory();\n  }\n}(this, function() {\nfunction uuidv4() {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tvar r = Math.random() * 16 | 0,\n\t\t\t\tv = c === 'x' ? r : r & 0x3 | 0x8;\n\t\treturn v.toString(16);\n\t});\n}\n\nreturn uuidv4;\n}));\n","let dialog = require('dialog');\n// let lazyload = require('lazy-load');\nlet Notice = require('notice');\n// let test = require('test');\n\nNotice.initialize();\n\nconst noticeOptions = {\n\twidget: 'notice',\n\t'notice-type': 'alert',\n\tanimation: 'true',\n\tlocation: 'fixedBottom',\n\tcollapsible: 'true'\n};\n\nNotice.create('Spaghetti Monster Lives', 'You know no spaghetti', noticeOptions);"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}