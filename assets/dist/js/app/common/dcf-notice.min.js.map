{"version":3,"sources":["common/dcf-notice.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","root","factory","define","amd","exports","module","require","dcfWidgetNotice","dcfHelperUuidv4","undefined","uuidv4","Notice","notices","document","querySelectorAll","fixedBottomExists","querySelector","slice","call","noticeClasses","notify","success","alert","fatal","noticeLocationClasses","current","nav","fixedBottom","fixedBottomLeft","noticeAnimationClasses","slideInScroll","slideUp","closeButtonClasses","prependMain","el","main","firstChild","firstElementChild","insertBefore","collapseExpandMessage","closeButton","title","message","expanded","getAttribute","innerText","classList","add","id","localStorage","setItem","remove","Boolean","setAttribute","toString","addCloseButton","isCollapsible","createElement","forEach","closeButtonclass","noticeTitle","noticeMessage","noticeMessageId","console","error","addEventListener","notice","hideNotice","e","propertyName","removeEventListener","focus","isDrawn","mobileObserver","desktopObserver","mq","window","matchMedia","mobileConfig","rootMargin","threshold","desktopConfig","observerCallback","entries","observer","entry","isIntersecting","intersectionRatio","thresholds","noticeAnimationClass","target","disconnect","onWidthChange","matches","IntersectionObserver","observe","createNotice","initialized","noticeType","dataset","noticeLocation","location","noticeAnimation","animation","noticeCollapsible","collapsible","noticeClass","info","getItem","noticeLocationClass","addListener","toggleButton","initialize","create","arguments","length","widgetOptions","insertionReference","insertionPoint","noticeHeader","noticeContent","keys","Object","key","appendChild","insertAdjacentElement"],"mappings":"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","file":"dcf-notice.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n;(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['./dcf-uuidGen.min'], factory);\n\t} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n\t\tmodule.exports = factory(require('./dcf-uuidGen.min'));\n\t} else {\n\t\troot.dcfWidgetNotice = factory(root.dcfHelperUuidv4);\n\t}\n})(undefined, function (uuidv4) {\n\t// uuid-gen dependency defined in gruntfile UMD task and passed in as uuidv4\n\t//TODO change this to use Class instead\n\n\tvar Notice = {};\n\tvar notices = document.querySelectorAll('[data-widget=\"notice\"]');\n\tvar fixedBottomExists = document.querySelector('[id*=\"unl-widget-fixedBottom-\"]') ? true : false; // flag for checking if a fixedBottom notice has been previously added to the page set flag to true\n\n\tnotices = [].slice.call(notices);\n\n\t// standard classes based on what kind of notice, keep it to DCF classes for now\n\tvar noticeClasses = {\n\t\tnotify: ['dcf-notice', 'unl-notice-notify'],\n\t\tsuccess: ['dcf-notice', 'unl-notice-success'],\n\t\talert: ['dcf-notice', 'unl-notice--alert'],\n\t\tfatal: ['dcf-notice', 'unl-notice--fatal']\n\t};\n\n\tvar noticeLocationClasses = {\n\t\tcurrent: ['uno'],\n\t\tnav: ['foo'],\n\t\tfixedBottom: ['bar', 'dcf-fixed', 'dcf-notice-fixedBottom', 'dcf-pin-bottom', 'dcf-pin-right', 'dcf-pin-left'],\n\t\tfixedBottomLeft: ['zoink'] // TODO add option that goes 50% width on desktop when fixedBottom\n\t};\n\n\t// default animations depending on associated locations\n\t// fixedBottom associated with slideUp animation. Everything else uses slideInScroll\n\tvar noticeAnimationClasses = {\n\t\tslideInScroll: ['baz'],\n\t\tslideUp: ['car']\n\t};\n\n\tvar closeButtonClasses = ['dcf-absolute', 'dcf-pin-top', 'dcf-pin-right', 'dcf-mt-3', 'dcf-mr-3', 'dcf-btn', 'dcf-btn-tertiary', 'js-notice-toggle'];\n\n\t/**\n  *\n  * Functions\n  */\n\n\t/**\n  * @purpose - move element to be the first child of main\n  * @param el - the element to be moved\n  *\n  */\n\tfunction prependMain(el) {\n\t\tvar main = document.querySelector('main');\n\t\tvar firstChild = main.firstElementChild;\n\t\tmain.insertBefore(el, firstChild);\n\t}\n\n\t/**\n  * @purpose - permanently closes the notice element\n  * @param notice - notice to be closed\n  *\n  */\n\tfunction closeNotice(notice) {\n\n\t\tfunction hideNotice(e) {\n\t\t\tif (e.propertyName !== \"max-height\") return;\n\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\tnotice.removeEventListener('transitionend', hideNotice);\n\t\t\tdocument.querySelector('main').focus(); // sending focus back to main\n\t\t}\n\n\t\tnotice.addEventListener('transitionend', hideNotice);\n\t\tnotice.classList.add('dcf-notice-fixedBottom--close');\n\n\t\tlocalStorage.setItem(notice.id, 'closed');\n\t}\n\n\t/**\n  * @purpose - collapse message when collapse button is selected\n  * @param el - notice to be closed\n  * @param closeButton - the close button associated with this notice\n  * @param title - title of notice\n  * @param message - message of notice\n  *\n  */\n\tfunction collapseExpandMessage(el, closeButton, title, message) {\n\t\t// Find out if notice is expanded\n\t\tvar expanded = closeButton.getAttribute('aria-expanded') === \"true\" ? true : false;\n\n\t\tif (expanded) {\n\t\t\t// if expanded, collapse message\n\t\t\tcloseButton.innerText = \"Expand\";\n\t\t\ttitle.classList.add('dcf-notice-title-collapse');\n\t\t\tmessage.classList.add('dcf-notice-message-collapse');\n\t\t\tif (el.id) localStorage.setItem(el.id, 'collapsed');\n\t\t} else {\n\t\t\t// if collapse, expand message\n\t\t\tcloseButton.innerText = \"Collapse\";\n\t\t\tmessage.classList.remove('dcf-notice-message-collapse');\n\t\t\ttitle.classList.remove('dcf-notice-title-collapse');\n\t\t\tif (el.id) localStorage.setItem(el.id, 'expanded');\n\t\t}\n\n\t\t// Invert to get new state\n\t\texpanded = new Boolean(!expanded);\n\n\t\t//Apply new state to notice\n\t\tcloseButton.setAttribute('aria-expanded', expanded.toString());\n\t}\n\n\t/**\n  * @purpose add a close button to the widget and the associated click events\n  * @param el\n  * @param isCollapsible\n  *\n  */\n\tfunction addCloseButton(el, isCollapsible) {\n\t\tvar closeButton = document.createElement('button');\n\t\tcloseButtonClasses.forEach(function (closeButtonclass) {\n\t\t\treturn closeButton.classList.add(closeButtonclass);\n\t\t});\n\n\t\tif (isCollapsible) {\n\t\t\t// if notice can be collapsed\n\t\t\tvar noticeTitle = el.querySelector('.js-notice-title');\n\t\t\tvar noticeMessage = el.querySelector('.js-notice-message');\n\t\t\tvar noticeMessageId = noticeMessage.id || uuidv4();\n\n\t\t\tcloseButton.innerText = 'collapse';\n\t\t\tcloseButton.setAttribute('aria-expanded', 'true');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnoticeTitle.classList.add('dcf-notice-title');\n\n\t\t\t!noticeMessage.id && (noticeMessage.id = noticeMessageId); //if no id is provided use the generated id\n\t\t\tcloseButton.setAttribute('aria-controls', noticeMessageId);\n\t\t\tnoticeMessage.classList.add('dcf-notice-message');\n\n\t\t\tcloseButton.addEventListener('click', function () {\n\t\t\t\tcollapseExpandMessage(el, closeButton, noticeTitle, noticeMessage);\n\t\t\t});\n\t\t} else {\n\t\t\t// else close the notice out completely\n\t\t\tcloseButton.innerText = 'close';\n\t\t\tcloseButton.addEventListener('click', function () {\n\t\t\t\tcloseNotice(el);\n\t\t\t});\n\t\t}\n\n\t\tel.insertBefore(closeButton, el.firstElementChild);\n\t}\n\n\t/**\n  * Intersection Observer related code\n  */\n\n\t// intersection observer - one time drawing variables and functions\n\tvar isDrawn = false;\n\tvar isMobile = false;\n\tvar mobileObserver = void 0,\n\t    desktopObserver = void 0;\n\tvar mq = window.matchMedia(\"(min-width: 480px)\");\n\tvar mobileConfig = {\n\t\t/* on mobile given potential line breaks, we won't be able to view the entire notice in its\n   entirety at one go so might want to show the notice when close to half of it is shown */\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.65\n\t};\n\tvar desktopConfig = {\n\t\troot: null,\n\t\trootMargin: '0px',\n\t\tthreshold: 0.8\n\t};\n\n\tfunction observerCallback(entries, observer) {\n\t\tentries.forEach(function (entry) {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tif (entry.intersectionRatio > 0 && entry.intersectionRatio >= observer.thresholds[0]) {\n\t\t\t\t\tnoticeAnimationClasses.slideInScroll.forEach(function (noticeAnimationClass) {\n\t\t\t\t\t\treturn entry.target.classList.add(noticeAnimationClass);\n\t\t\t\t\t});\n\n\t\t\t\t\t// set isDrawn flag to true after actions have been taken\n\t\t\t\t\tisDrawn = true;\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction onWidthChange(mq) {\n\t\tif (isDrawn) return;\n\t\tif (mq.matches) {\n\t\t\t//desktop\n\t\t\tisMobile = false;\n\t\t\tcreateDesktopObserver();\n\n\t\t\tif (mobileObserver) {\n\t\t\t\tmobileObserver.disconnect();\n\t\t\t}\n\t\t} else {\n\t\t\t//mobile\n\t\t\tisMobile = true;\n\t\t\tcreateMobileObserver();\n\n\t\t\tif (desktopObserver) {\n\t\t\t\tdesktopObserver.disconnect();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createMobileObserver() {\n\t\tnotices.forEach(function (notice) {\n\t\t\tmobileObserver = new IntersectionObserver(observerCallback, mobileConfig);\n\t\t\tmobileObserver.observe(notice);\n\t\t});\n\t}\n\n\tfunction createDesktopObserver() {\n\t\tnotices.forEach(function (notice) {\n\t\t\tdesktopObserver = new IntersectionObserver(observerCallback, desktopConfig);\n\t\t\tdesktopObserver.observe(notice);\n\t\t});\n\t}\n\n\t/**\n  * @purpose reusable notice creation and styling code\n  * @param notice - the notice element\n  */\n\tfunction createNotice(notice) {\n\t\tif (notice.initialized) return; // exit if the notice has been initialized\n\n\t\tvar noticeType = notice.dataset.noticeType;\n\t\tvar noticeLocation = notice.dataset.location;\n\t\tvar noticeAnimation = notice.dataset.animation === \"true\" ? true : false;\n\t\tvar noticeCollapsible = notice.dataset.collapsible === \"true\" ? true : false;\n\n\t\t// 1.check notice option type and add the needed classes\n\t\tif (noticeClasses[noticeType]) {\n\t\t\tnoticeClasses[noticeType].forEach(function (noticeClass) {\n\t\t\t\treturn notice.classList.add(noticeClass);\n\t\t\t});\n\t\t} else {\n\t\t\t// default to info notify styling\n\t\t\tnoticeClasses.notify.forEach(function (noticeClass) {\n\t\t\t\treturn notice.classList.add(noticeClass);\n\t\t\t});\n\t\t}\n\n\t\t// 2.check widget location whether its current, nav, or fixed-bottom and assign class names\n\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\tif (!fixedBottomExists) {\n\t\t\t\t// get provided id and append it with a prefix\n\t\t\t\tif (notice.id) {\n\t\t\t\t\tnotice.id = 'dcf-widget-fixedBottom--' + notice.id;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.info('An id attribute needs to be provided for the fixed to bottom notice to function properly with' + ' localStorage');\n\t\t\t\t}\n\n\t\t\t\t// check to see if data-collapsible is false and exists in storage as closed, hide notice rightaway\n\t\t\t\tif (!noticeCollapsible && localStorage.getItem(notice.id) === 'closed') {\n\t\t\t\t\tnotice.classList.add('dcf-d-none');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// add assigned classes\n\t\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(function (noticeLocationClass) {\n\t\t\t\t\t\treturn notice.classList.add(noticeLocationClass);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\taddCloseButton(notice, noticeCollapsible);\n\t\t\t\tprependMain(notice); // move fixed-bottom notice to the top of source\n\t\t\t\tfixedBottomExists = true;\n\t\t\t} else {\n\t\t\t\tconsole.error('Only one fixed to bottom notice may exist on a page');\n\t\t\t}\n\t\t} else {\n\t\t\t// location other than fixedBottom\n\n\t\t\tif (noticeLocationClasses[noticeLocation]) {\n\t\t\t\tnoticeLocationClasses[noticeLocation].forEach(function (noticeLocationClass) {\n\t\t\t\t\treturn notice.classList.add(noticeLocationClass);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// set current option as the default notice styling\n\t\t\t\tnoticeLocationClasses.current.forEach(function (noticeLocationClass) {\n\t\t\t\t\treturn notice.classList.add(noticeLocationClass);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// 2.1 if its nav, move the element to after the nav and before the page title\n\t\t\tif (noticeLocation === 'nav') {\n\t\t\t\tprependMain(notice);\n\t\t\t}\n\t\t}\n\n\t\t// 3. check animation type whether its slide-in-scroll?\n\t\t// if exist will have to implement intersection observer\n\t\t// Question for Michael if multiple widgets need intersection observer, how can we make it more modular?\n\t\tif (noticeAnimation) {\n\t\t\tif (noticeLocation === 'fixedBottom') {\n\t\t\t\t// add noticeAnimationClasses.slideUp\n\t\t\t\tnoticeAnimationClasses.slideUp.forEach(function (noticeAnimationClass) {\n\t\t\t\t\treturn notice.classList.add(noticeAnimationClass);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// implement intersection observer\n\t\t\t\t// add noticeAnimationClasses.slideInScroll\n\t\t\t\tif ('IntersectionObserver' in window) {\n\t\t\t\t\tnotice.classList.add('hide-animate');\n\t\t\t\t\tmq.addListener(function () {\n\t\t\t\t\t\treturn onWidthChange(mq);\n\t\t\t\t\t});\n\n\t\t\t\t\t//check browser width once on page load\n\t\t\t\t\tonWidthChange(mq);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnotice.initialized = true;\n\n\t\t// 4. check localStorage for fixed bottom and collapsible\n\t\tif (noticeCollapsible && localStorage.getItem(notice.id) === 'collapsed') {\n\t\t\tvar noticeTitle = notice.querySelector('.js-notice-title');\n\t\t\tvar noticeMessage = notice.querySelector('.js-notice-message');\n\t\t\tvar toggleButton = notice.querySelector('.js-notice-toggle');\n\n\t\t\tif (!noticeTitle) {\n\t\t\t\tconsole.error('Your notice is missing a title.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!noticeMessage) {\n\t\t\t\tconsole.error('Your notice is missing a message.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcollapseExpandMessage(notice, toggleButton, noticeTitle, noticeMessage);\n\t\t}\n\t}\n\n\t/**\n  *  widget.initialize is the default functionality that scans all the existing notice widgets in the dom\n  *  and initialize them\n  */\n\tNotice.initialize = function () {\n\t\tnotices.forEach(function (notice) {\n\t\t\tcreateNotice(notice);\n\t\t});\n\t};\n\n\t/**\n  * widget.create takes in arguments to dynamically create notices on the fly\n  */\n\tNotice.create = function () {\n\t\tvar noticeTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\tvar noticeMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t\tvar widgetOptions = arguments[2];\n\t\tvar insertionReference = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'main';\n\t\tvar insertionPoint = arguments[4];\n\n\n\t\tif (noticeTitle.length === 0) {\n\t\t\tconsole.error('Please provide a notice title');\n\t\t\treturn;\n\t\t}\n\n\t\tif (noticeMessage.length === 0) {\n\t\t\tconsole.error('Please provide a notice message');\n\t\t\treturn;\n\t\t}\n\n\t\tvar notice = document.createElement('div');\n\t\tvar noticeHeader = document.createElement('h2');\n\t\tvar noticeContent = document.createElement('p');\n\n\t\t// set up the notice element\n\t\tvar keys = Object.keys(widgetOptions);\n\t\tnotice.setAttribute('role', 'alert');\n\n\t\tkeys.forEach(function (key) {\n\t\t\tif (key === 'id') {\n\t\t\t\tnotice.id = widgetOptions[key];\n\t\t\t} else {\n\t\t\t\tnotice.setAttribute('data-' + key, widgetOptions[key]);\n\t\t\t}\n\t\t});\n\n\t\tif (typeof noticeTitle === 'string') noticeHeader.innerText = noticeTitle;\n\t\tif (typeof noticeMessage === 'string') noticeContent.innerText = noticeMessage;\n\n\t\tnoticeHeader.classList.add('js-notice-title');\n\t\tnoticeContent.classList.add('js-notice-message');\n\n\t\tnotice.appendChild(noticeHeader);\n\t\tnotice.appendChild(noticeContent);\n\n\t\t// insert the notice\n\t\tif (insertionReference === 'main' && insertionPoint === undefined) {\n\t\t\t// assuming no insertionReference or insertionPoint provided\n\t\t\tprependMain(notice);\n\t\t} else {\n\t\t\t// if insertionReference provided without insertigonPoint provided, default will be afterbegin\n\t\t\tif (insertionPoint === undefined) insertionPoint = 'afterbegin';\n\t\t\tvar targetElement = document.querySelector(insertionReference);\n\t\t\ttargetElement.insertAdjacentElement(insertionPoint, notice);\n\t\t}\n\n\t\t// call createNotice\n\t\tcreateNotice(notice);\n\t};\n\n\treturn Notice;\n});"]}