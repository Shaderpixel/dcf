/**
 * @project        dcf
 * @author         Digital Campus Nebraska
 * @website        http://digitalcampus.us/
 * @copyright      Copyright (c) 2019, BSD-3-Clause
 *
 */
"use strict";var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=t():e.dcfLazyLoad=t()}(void 0,function(){return function(){function e(t,r,o){var n=this;_classCallCheck(this,e),this.onIntersection=function(e,t){0===n.imageCount&&n.observer.disconnect();for(var r=0;r<e.length;r++){var o=e[r];console.log(o.intersectionRatio),o.intersectionRatio>t.thresholds[0]&&o.intersectionRatio<t.thresholds[1]?n.preloadImage(o.target):o.intersectionRatio>t.thresholds[1]&&(n.imageCount--,n.applyImage(o.target),n.observer.unobserve(o.target))}},this.imagesList=t,this.observerConfig=r,this.classNames=o}return _createClass(e,[{key:"applyImage",value:function(e){var t=e.dataset.src,r=e.dataset.srcset||null;if(!t)throw new Error("No image src attribute provided");e.classList.add("dcf-lazy-img-loaded"),t&&e.removeAttribute("data-src"),r&&(e.srcset=r),r&&e.removeAttribute("data-srcset"),this.classNames.length&&this.classNames.forEach(function(t){return e.classList.add(t)})}},{key:"fetchImage",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new Promise(function(r,o){var n=new Image;e&&(n.src=e),t&&(n.srcset=t),n.onload=r,n.onerror=o})}},{key:"preloadImage",value:function(e){var t=e.dataset.src,r=e.dataset.srcset;if(!t)throw new Error("No image src attribute provided");return this.fetchImage(t,r).catch(function(e){return"Image failed to fetch "+e.mes})}},{key:"loadImagesImmediately",value:function(e){for(var t=0;t<e.length;t++){var r=e[t];this.preloadImage(r)}}},{key:"disconnect",value:function(){this.observer&&this.observer.disconnect()}},{key:"initialize",value:function(){if(this.imagesList)if(this.imageCount=this.imagesList.length,"IntersectionObserver"in window){this.observer=new IntersectionObserver(this.onIntersection,this.observerConfig);for(var e=0;e<this.imageCount;e++){var t=this.imagesList[e];t.classList.contains("dcf-lazy-img-loaded")||this.observer.observe(t)}}else this.loadImagesImmediately(this.imagesList)}}]),e}()});
//# sourceMappingURL=dcf-lazyLoad.min.js.map
